digraph Roboliq {
	//Parser [ shape="Mrecord" ];
	//Evaluator [ shape="Mrecord" ];
	//JSON -> Parser -> Rjs -> Evaluator;

	node [ shape="note" ];

	subgraph cluster_0 {
		label = "Input";
		GenericProtocol;
		Alternatives0 [ label="PlanningAlternatives", style="dashed,filled", fillcolor="#ffdddd" ];
		EvowareConfig0 [ label="EvowareConfig", style="dashed,filled", fillcolor="#ddddff" ];

		EvowareConfigProcessor [ shape="Mrecord" ];
		ProtocolProcessor [ shape="Mrecord" ];
		AssistedPlanner [ shape="Mrecord" ];

		ProtocolMerger [ shape="Mrecord" ];

		EvowareConfig0 -> EvowareConfigProcessor -> LabProtocolData -> ProtocolMerger;
		GenericProtocol -> ProtocolProcessor -> GenericProtocolData -> ProtocolMerger;
		Alternatives0 -> AssistedPlanner -> PlannedProtocolData1 -> ProtocolMerger;
	};

	CheckPoint1 [ label="", shape="diamond", width=0.2, height=0.2, fixedsize=true ];
	ExpandCommands [
		shape = none
		label = <<table border="0" cellspacing="0" cellborder="1">
					<tr><td port="port1">Expand Tasks</td></tr>
					<tr><td port="port2">Expand Methods</td></tr>
				</table>>
	]
	ProtocolData0 [ shape="record", label="{ProtocolData #1|{Logic|Commands|Settings}}", style="filled", fillcolor="#ddffdd" ];

	ProtocolMerger -> ProtocolData0;

	CheckTasks [ shape="diamond", label="Tasks?" ];
	ProtocolData0 -> CheckTasks;
	FindMethods [ shape="Mrecord" ];
	CheckTasks -> FindMethods [ label="incomplete" ];
	FindMethods -> TaskAlternatives [ label="list alternative methods" ];
	{ rank=same CheckTasks FindMethods TaskAlternatives };

	CheckMethods [ shape="diamond", label="Methods?" ];
	CheckTasks -> CheckMethods;
	ExpandMethods [ shape="Mrecord" ];
	CheckMethods -> ExpandMethods [ label="incomplete" ];
	ExpandMethods -> AlternativesX [ label="expand methods to list of actions" ];
	{ rank=same CheckMethods ExpandMethods AlternativesX };
	
	CheckMethods -> TaskExpander;

	subgraph cluster_1 {
		label = "Task Planning";

		TaskExpander [ shape="Mrecord" ];
		MethodExpander [ shape="Mrecord" ];
		Alternatives1a [ shape="note", label="PlanningAlternatives", style="filled", fillcolor="#ffdddd" ];
		Alternatives1b [ shape="note", label="PlanningAlternatives", style="filled", fillcolor="#ffdddd" ];

		TaskExpander -> MethodExpander;
		TaskExpander -> Alternatives1a [ label="missing"];
		{ rank=same TaskExpander Alternatives1a };
		MethodExpander -> Alternatives1b [ label="missing"];
		{ rank=same MethodExpander Alternatives1b };
	}

	ProtocolData1 [ shape="record", label="{ProtocolData #2|{Logic|Commands|Settings}}", style="filled", fillcolor="#ddffdd" ];
	MethodExpander -> ProtocolData1 -> Split1;


	subgraph cluster_2 {
		label = "Action Planning";

		Split1 [ shape="point" ];
		LogicCompiler [ shape="Mrecord" ];
		PartialOrderPlanner [ shape="Mrecord" ];
		PlanChecker [ shape="Mrecord" ];
		PlanIntegrator [ shape="Mrecord" ];
		Alternatives2 [ shape="note", label="PlanningAlternatives", style="filled", fillcolor="#ffdddd" ];

		Split1 -> LogicCompiler;
		LogicCompiler -> PDDL -> PartialOrderPlanner -> PartialOrderPlan;
		PartialOrderPlan -> CheckPoint2 [ arrowhead="none" ];

		CheckPoint2 -> PlanChecker [ arrowhead="none" ];
		PlanChecker -> Alternatives2 [ label=" missing " ];
		CheckPoint2 -> PlanIntegrator;
		Split1 -> PlanIntegrator;

		{ rank=same Split1 LogicCompiler };
		{ rank=same CheckPoint2 PlanChecker Alternatives2 };
	};

	ActionHandlers [ shape="Mrecord" ];
	EvowareCompiler [ shape="Mrecord" ];

	CheckPoint2 [ label="", shape="diamond", width=0.2, height=0.2, fixedsize=true ];
	ProtocolData3 [ shape="record", label="{ProtocolData #3|{Logic|Commands|Settings}}", style="filled", fillcolor="#ddffdd" ];
	ProtocolData4 [ shape="record", label="{ProtocolData #4|{Logic|Commands|Settings}}", style="filled", fillcolor="#ddffdd" ];

	PlanIntegrator -> ProtocolData3 [ label=" add complete list of planned actions and parameters" ];
	ProtocolData3 -> ActionHandlers;
	ActionHandlers -> ProtocolData4;

	EvowareConfig1 [ label="EvowareConfig", style="dashed,filled", fillcolor="#ddddff" ];
	ProtocolData4 -> InstructionList -> EvowareCompiler -> EvowareScript;
	
	EvowareConfig1 -> EvowareCompiler;

	{ rank=same EvowareCompiler EvowareConfig1 };
}
