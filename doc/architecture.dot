digraph Roboliq {
	//Parser [ shape="Mrecord" ];
	//Evaluator [ shape="Mrecord" ];
	//JSON -> Parser -> Rjs -> Evaluator;

	node [ shape="note" ];

	GenericProtocol;
	Alternatives0 [ shape="record", label="{Planning Data|Variables|Task Methods|Command Expansions|Partial Plan|Plan Steps*|Plan Order|Complete Plan}", style="dashed,filled", fillcolor="#ffdddd" ];
	EvowareConfig0 [ label="EvowareConfig", style="filled", fillcolor="#ddffff" ];

	EvowareConfigProcessor [ shape="Mrecord" ];
	ProtocolProcessor [ shape="Mrecord" ];
	AssistedPlanner [ shape="Mrecord" ];

	ProtocolMerger [ shape="Mrecord" ];

	{ rank=same GenericProtocol EvowareConfig0 Alternatives0};

	GenericProtocol [ style="filled", fillcolor="#ddffff" ];
	GenericProtocol -> ProtocolProcessor -> GenericProtocolData;
	GenericProtocolData -> ProtocolMerger [ label="1" ];
	EvowareConfig0 -> EvowareConfigProcessor -> LabProtocolData;
	LabProtocolData -> ProtocolMerger [ label="2" ];
	AutomatedProtocolData -> ProtocolMerger [ label="3" ];
	Alternatives0 -> AssistedPlanner;
	AssistedPlanner -> AutomatedProtocolData [ dir="both" ];
	UserProtocolData [ style="filled", fillcolor="#ddffff" ];
	AssistedPlanner -> UserProtocolData [ dir="both" ];
	UserProtocolData -> ProtocolMerger [ label="4" ];

	GenericProtocolData -> LabProtocolData -> AutomatedProtocolData -> UserProtocolData [ style="invis" ];
	{ rank=same GenericProtocolData LabProtocolData AutomatedProtocolData UserProtocolData };

	ProtocolData0 [ shape="record", label="{ProtocolData|{Logic|Commands|Settings|Planning}}" ];

	ProtocolMerger -> ProtocolData0;

	Wrapper [ shape="point" ];
	ProtocolData0 -> Wrapper;
	MethodLibraries [ style="filled", fillcolor="#ddffff" ];
	ActionLibraries [ style="filled", fillcolor="#ddffff" ];
	MethodLibraries -> Wrapper;
	ActionLibraries -> Wrapper;

	CheckProtocolVariables [ shape="diamond", label="Protocol vars?", width=2 ];
	Wrapper -> CheckProtocolVariables;
	FindProtocolValues [ shape="Mrecord" ];
	CheckProtocolVariables -> FindProtocolValues [ label="incomplete" ];
	ProtocolVariableAlternatives [ label="Variables", style="dashed,filled", fillcolor="#ffdddd" ];
	FindProtocolValues -> ProtocolVariableAlternatives [ label="alternative values" ];
	{ rank=same CheckProtocolVariables FindProtocolValues ProtocolVariableAlternatives };

	CheckTasks [ shape="diamond", label="Tasks?", width=2 ];
	CheckProtocolVariables -> CheckTasks;
	FindMethods [ shape="Mrecord" ];
	CheckTasks -> FindMethods [ label="incomplete" ];
	TaskMethods [ label="Task Methods", style="dashed,filled", fillcolor="#ffdddd" ];
	FindMethods -> TaskMethods [ label="list alternative methods" ];
	{ rank=same CheckTasks FindMethods TaskMethods };

	CheckMethods [ shape="diamond", label="Methods?", width=2 ];
	ExpandMethods [ shape="Mrecord" ];
	CheckMethods -> ExpandMethods [ label="incomplete" ];
	AlternativesX [ label="AutomatedProtocolData" style="dashed,filled", fillcolor="#ffdddd" ];
	ExpandMethods -> AlternativesX [ label="expand methods" ];
	{ rank=same CheckMethods ExpandMethods AlternativesX };
	
	CheckPlan [ shape="diamond", label="Plan?", width=2 ];
	LogicCompiler [ shape="Mrecord" ];
	PartialOrderPlanner [ shape="Mrecord" ];
	PartialPlan [ label="Partial Plan + Steps + Order" style="dashed,filled", fillcolor="#ffdddd" ];
	CheckPlan -> LogicCompiler [ label="incomplete" ];
	LogicCompiler -> PDDL -> PartialOrderPlanner -> PartialPlan;
	{ rank=same CheckPlan LogicCompiler PDDL PartialOrderPlanner PartialPlan };

	CheckOrder [ shape="diamond", label="Order?", width=2 ];
	PlanSteps [ label="Plan Steps" style="dashed,filled", fillcolor="#ffdddd" ];
	CheckSteps -> PlanSteps [ label="incomplete" ];
	{ rank=same CheckSteps PlanSteps };

	// CONTINUE
	PlanChecker [ shape="Mrecord" ];
	PlanIntegrator [ shape="Mrecord" ];
	Alternatives2 [ shape="note", label="PlanningAlternatives", style="dashed,filled", fillcolor="#ffdddd" ];
	CheckPoint2 [ label="", shape="diamond", width=0.2, height=0.2, fixedsize=true ];

	LogicCompiler -> PDDL -> PartialOrderPlanner -> PartialOrderPlan;
	PartialOrderPlan -> CheckPoint2 [ arrowhead="none" ];
	// END OF CONTINUE

	CheckVariables [ shape="diamond", label="Variables?", width=2 ];
	CheckPlan -> CheckVariables;
	FindValues [ shape="Mrecord" ];
	CheckVariables -> FindValues [ label="incomplete" ];
	VariableAlternatives [ style="dashed,filled", fillcolor="#ffdddd" ];
	FindValues -> VariableAlternatives [ label="list alternative values" ];
	{ rank=same CheckVariables FindValues VariableAlternatives };

	CheckActions [ shape="diamond", label="Actions?", width=2 ];
	CheckVariables -> CheckActions;
	HandleActions [ shape="Mrecord" ];
	CheckActions -> HandleActions [ label="incomplete" ];
	ActionCommands [ style="dashed,filled", fillcolor="#ffdddd" ];
	HandleActions -> ActionCommands [ label="expand actions" ];
	{ rank=same CheckActions HandleActions ActionCommands };

	ExtractInstructions [ shape="Mrecord" ];
	CheckActions -> ExtractInstructions;
	ExtractInstructions -> InstructionList;

	EvowareCompiler [ shape="Mrecord" ];
	InstructionList -> EvowareCompiler;
	EvowareCompiler -> EvowareScript;
	EvowareConfig1 [ label="EvowareConfig" ];
	EvowareConfig1 -> EvowareCompiler;
	{ rank=same EvowareCompiler EvowareConfig1 };

	CheckTasks -> CheckMethods -> CheckPlan;





		CheckPoint2 -> PlanChecker [ arrowhead="none" ];
		PlanChecker -> Alternatives2 [ label=" missing " ];
		CheckPoint2 -> PlanIntegrator;

		{ rank=same CheckPoint2 PlanChecker Alternatives2 };

	PlannedActions [ label="Planned Actions", style="dashed,filled", fillcolor="#ffdddd" ];
	PlanIntegrator -> PlannedActions

	ProtocolVariableAlternatives -> TaskMethods [ style="invis" ];
}
