pipetter:
  module: |
    The `pipetter` commands specify actions using pipetting equipment.

Pipetter:
  description: Pipetting equipment.
  properties:
    type: {enum: [Pipetter]}
    description: {type: string}
    label: {type: string}
  required: [type]

Syringe:
  description: Pipetting syringe.
  properties:
    type: {enum: [Syringe]}
    description: {type: string}
    label: {type: string}
    tipModel: {description: Tip model identifier, type: string}
    tipModelPermanent: {type: string}
  required: [type]

pipetter._MixSpec:
  description: "Parameters for mixing in higher-level commands like pipetter._PipetteItem."
  properties:
    count: {description: "Number of times to aspirate and re-dispense", type: integer}
    volume: {description: "Amount to aspirate, either as a fraction or absolute volume", type: Volume}
  required: [count, volume]

pipetter._AspirateItem:
  description: Parameters for pipette items.
  properties:
    syringe: {description: Syringe identifier, type: [number, nameOf Syringe]}
    source: {description: Source specifier, type: Well}
    volume: {description: Volume, type: Volume}
  required: [syringe, source, volume]

pipetter._DispenseItem:
  description: Parameters for pipette items.
  properties:
    syringe: {description: Syringe identifier, type: [number, nameOf Syringe]}
    destination: {description: Destination specifier, type: Well}
    volume: {description: Volume, type: Volume}
  required: [syringe, destination, volume]

pipetter._MeasureVolumeItem:
  description: Parameters for low-level pipetter._measureVolume items.
  properties:
    syringe: {description: Syringe identifier, type: [number, nameOf Syringe]}
    well: {description: Well specifier, type: Well}
  required: [syringe, well, distance]

pipetter.MeasureItem:
  description: Parameters for pipetter.measureVolume items.
  properties:
    syringe: {description: Syringe identifier, type: [number, nameOf Syringe]}
    well: {description: Well specifier, type: Well}
    cleanAfter: {description: "intensity of cleaning required after this item.", type: pipetter.CleaningIntensity}


pipetter._MixItem:
  description: Parameters for mixing with pipetter.
  properties:
    syringe: {description: Syringe identifier, type: [number, nameOf Syringe]}
    well: {description: Well to mix, type: Well}
    count: {description: "Number of times to aspirate and re-dispense", type: integer}
    volume: {description: Volume, type: Volume}
    program: {description: "Program identifier", type: "string"}
  required: [syringe, well]

pipetter.CleaningIntensity:
  description: |
    Intensity of cleaning.

    The enum lists the intensities in increase order.
  enum: ["none", "flush", "light", "thorough", "decontaminate"]

pipetter._PipetteItem:
  description: Parameters for low-level pipette items.
  properties:
    syringe: {description: Syringe identifier, type: [number, nameOf Syringe]}
    source: {description: Source specifier, type: Well}
    destination: {description: Destination specifier, type: Well}
    volume: {description: Volume, type: Volume}
    sourceMixing: {description: "Parameters for mixing the source prior to aspiration", type: pipetter._MixSpec}
    destinationMixing: {description: "Parameters for mixing the destination after dispense", type: pipetter._MixSpec}
  # required: [syringe, source, destination, volume]
  required: [syringe, volume]

pipetter.PipetteItem:
  description: Parameters for pipette items.
  properties:
    syringe: {description: Syringe identifier, type: [number, nameOf Syringe]}
    source: {description: Source specifier, type: Source}
    destination: {description: Destination specifier, type: Well}
    volume: {description: Volume, type: Volume}
    volumeCalibrated: {description: "Calculate a calibrated volume", type: object}
    volumeTotal: {description: "Volume that the well should be brought up to.", type: Volume}
    layer: {description: "A layer identifier for hinting that to items in the same layer should be grouped together, even if they aren't in adjacent in the items list."}
    cleanAfter: {description: "intensity of cleaning required after this item.", type: pipetter.CleaningIntensity}
    sourceMixing: {description: "Parameters for mixing the source prior to aspiration", type: [boolean, pipetter.MixSpec]}
    destinationMixing: {description: "Parameters for mixing the destination after dispense", type: [boolean, pipetter.MixSpec]}

pipetter._PunctureItem:
  description: Parameters for low-level puncture items.
  properties:
    syringe: {description: Syringe identifier, type: [number, nameOf Syringe]}
    well: {description: Well specifier, type: Well}
    distance: {description: "Distance for puncturing", type: Length}
  required: [syringe, well, distance]

pipetter.PunctureItem:
  description: Parameters for puncture items.
  properties:
    syringe: {description: Syringe identifier, type: [number, nameOf Syringe]}
    well: {description: Well specifier, type: Well}
    distance: {description: "Distance for puncturing", type: Length}
    cleanAfter: {description: "intensity of cleaning required after this item.", type: pipetter.CleaningIntensity}

pipetter.DilutionItem:
  description: Parameters for a dilution series.
  properties:
    syringe: {description: Syringe identifier, type: [number, Syringe]}
    source: {description: Source specifier, type: Source}
    destinations: {description: Destination wells, type: Wells}
    #dilutionFactor: {description: How many times diluted, type: number}
    volume: {description: Volume, type: Volume}
  required: [destinations]

pipetter.MixItem:
  description: Parameters for mixing with pipetter.
  properties:
    syringe: {description: Syringe identifier, type: [number, nameOf Syringe]}
    well: {description: Well to mix, type: Well}
    count: {description: "Number of times to aspirate and re-dispense", type: integer}
    amount: {description: "Amount to aspirate, either as a fraction or absolute volume", type: [Volume, number]}
    program: {description: "Program identifier", type: "string"}

pipetter.MixSpec:
  description: Parameters for mixing (used in higher-level commands like pipetter.pipette and pipetter.pipetteDilutionSeries).
  properties:
    count: {description: "Number of times to aspirate and re-dispense", type: integer}
    amount: {description: "Amount to aspirate, either as a fraction or absolute volume", type: [Volume, number]}
    program: {description: "Program identifier", type: "string"}

pipetter._aspirate:
  description: Aspirate liquids from sources into syringes.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    program: {description: "Program identifier", type: "string"}
    items: {description: "Data about what should be aspirated from where", "type": "array", items: {type: pipetter._AspirateItem}}
  required: [agent, equipment, program]

pipetter._dispense:
  description: Dispense liquids from sryinges into destinations.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    program: {description: "Program identifier", type: "string"}
    items: {description: "Data about what should be dispensed where", "type": "array", items: {type: pipetter._DispenseItem}}
  required: [agent, equipment, program]

pipetter._measureVolume:
  description: Measure well volume using pipetter tips.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    program: {description: "Program identifier", type: "string"}
    items: {description: "List of parameters for individual wells", "type": "array", items: {type: pipetter._MeasureVolumeItem}}
  required: [agent, equipment, items]

pipetter._mix:
  description: Mix liquids by aspirating and re-dispensing.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    program: {description: "Program identifier", type: "string"}
    itemDefaults:
      description: "Default values for items"
      properties:
        count: {description: "Number of times to aspirate and re-dispense", type: integer}
        volume: {description: Volume, type: Volume}
    items: {description: "Data about mixing", "type": "array", items: {type: pipetter._MixItem}}
  required: [agent, equipment, program]

pipetter._pipette:
  description: Pipette liquids from sources to destinations.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    program: {description: "Program identifier", type: "string"}
    sourceProgram: {description: "Program identifier for aspirating from source, if it should differ from 'program'", type: "string"}
    items: {description: "Data about what should be pipetted where", "type": "array", items: {type: pipetter._PipetteItem}}
    sourceMixing: {description: "Parameters for mixing the source prior to aspiration", type: pipetter._MixSpec}
    destinationMixing: {description: "Parameters for mixing the destination after dispense", type: pipetter._MixSpec}
  required: [agent, equipment, program]

pipetter._punctureSeal:
  description: Puncture the seal on a plate using pipetter tips.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    # program: {description: "Program identifier", type: "string"}
    items: {description: "List of parameters for individual punctures", "type": "array", items: {type: pipetter._PunctureItem}}
  required: [agent, equipment, items]

pipetter._washTips:
  description: Clean the pipetter tips.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    program: {description: "Program identifier", type: [name, object]}
    syringes: {description: "List of syringe identifiers", type: array, items: {type: Syringe}}
    intensity: {description: "Intensity of the cleaning", type: pipetter.CleaningIntensity}
  required: [agent, equipment, program, syringes, intensity]

pipetter.cleanTips:
  description: Clean the pipetter tips.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    program: {description: "Program identifier", type: "string"}
    items:
      description: "List of which syringes to clean at which intensity"
      type: array
      items:
        type: object
        properties:
          syringe: {description: Syringe identifier, type: [number, nameOf Syringe]}
          intensity: {description: "Intensity of the cleaning", type: pipetter.CleaningIntensity}
        required: [syringe]
    syringes: {description: "Optional list of syringes to serve as default for missing syringes in items list", type: array, items: {type: [number, nameOf Syringe]}}
    intensity: {description: "Optional intensity to serve as default intensity for missing intensities in items list", type: pipetter.CleaningIntensity}

pipetter.measureVolume:
  description: Measure well volume using pipetter tips.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    items: {description: "List of parameters for individual wells to measure", "type": "array", items: {type: pipetter.PunctureItem}}
    wells: {description: "Specifier for well(s) to measure, if missing from items", type: Wells}
    syringes: {description: "Specifier for syringe(s) to use, if missing from items", type: array, items: {type: [number, nameOf Syringe]}}
    clean: {description: "Intensity of cleaning", type: string}
    cleanBegin: {description: "intensity of cleaning before the first puncture.", type: string}
    cleanBetween: {description: "Intensity of cleaning between wells.", type: string}
    cleanEnd: {description: "Intensity of cleaning after the last puncture.", type: string}
    tipModel: {description: "Tip model identifier, in order to use a specific tip model", type: string}

pipetter.mix:
  description: Mix well contents by aspirating and re-dispensing.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    program: {description: "Program identifier", type: "string"}
    items: {description: "Data about which wells to mix and how to mix them", "type": "array", items: {type: pipetter.MixItem}}
    sourceLabware: {description: "Labware for source wells", "type": "Plate"}
    destinationLabware: {description: "Labware for source wells", "type": "Plate"}
    wells: {description: "Specifier for well(s) to mix, if missing from items", type: Wells}
    counts: {description: "Number of times to aspirate, if missing from items", type: integer, default: 3}
    amounts: {description: "Amount to aspirate, either as a fraction or absolute volume, if missing from items", type: [Volume, number], default: 0.7}
    syringes: {description: "Specifier for syringe(s) to use, if missing from items", type: array, items: {type: [number, nameOf Syringe]}}
    clean: {description: "Intensity of cleaning", type: string}
    cleanBegin: {description: "intensity of first cleaning at beginning of pipetting, before first aspiration.", type: string}
    cleanBetween: {description: "Intensity of cleaning between different liquids.", type: string}
    cleanBetweenSameSource: {description: "Intensity of cleaning between transfers of the same liquid.", type: string}
    cleanEnd: {description: "Intensity of cleaning after the last dispense.", type: string}

pipetter.pipette:
  description: Pipette liquids from sources to destinations.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    program: {description: "Program identifier", type: "string"}
    sourceProgram: {description: "Program identifier for aspirating from source, if it should differ from 'program'", type: "string"}
    items: {description: "Data about what should be pipetted where", "type": "array", items: {type: pipetter.PipetteItem}}
    sourceLabware: {description: "Labware for source wells", "type": "Plate"}
    destinationLabware: {description: "Labware for source wells", "type": "Plate"}
    sources: {description: "Specifier for source(s) to aspirate from, if missing from items", type: Sources}
    destinations: {description: "Specifier for destination(s) to despense to, if missing from items", type: Wells}
    volumes: {description: "Volume(s) to pipette, if missing from items", type: Volumes}
    syringes: {description: "Specifier for syringe(s) to use, if missing from items", type: array, items: {type: [number, nameOf Syringe]}}
    clean: {description: "Intensity of cleaning", type: string}
    cleanBegin: {description: "intensity of first cleaning at beginning of pipetting, before first aspiration.", type: string}
    cleanBetween: {description: "Intensity of cleaning between different liquids.", type: string}
    cleanBetweenSameSource: {description: "Intensity of cleaning between transfers of the same liquid.", type: string}
    cleanEnd: {description: "Intensity of cleaning after the last dispense.", type: string}
    sourceMixing: {description: "Parameters for mixing the source wells with pipetter before aspirating", type: [boolean, pipetter.MixSpec]}
    destinationMixing: {description: "Parameters for mixing the destination after dispense", type: [boolean, pipetter.MixSpec]}
    tipModel: {description: "Tip model identifier, in order to use a specific tip model", type: string}
  required: []

pipetter.punctureSeal:
  description: Puncture the seal on a plate using pipetter tips.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    # program: {description: "Program identifier", type: "string"}
    items: {description: "List of parameters for individual punctures", "type": "array", items: {type: pipetter.PunctureItem}}
    wells: {description: "Specifier for well(s) to puncture, if missing from items", type: Wells}
    syringes: {description: "Specifier for syringe(s) to use, if missing from items", type: array, items: {type: [number, nameOf Syringe]}}
    distances: {description: "Distance for puncturing", type: [Length, array], items: {type: Length}}
    clean: {description: "Intensity of cleaning", type: string}
    cleanBegin: {description: "intensity of cleaning before the first puncture.", type: string}
    cleanBetween: {description: "Intensity of cleaning between wells.", type: string}
    cleanEnd: {description: "Intensity of cleaning after the last puncture.", type: string}
    tipModel: {description: "Tip model identifier, in order to use a specific tip model", type: string}

pipetter.pipetteDilutionSeries:
  description: |
    Pipette a dilution series.

    First the diluent is distributed to the destination wells (if diluent is specified).
    Then the source is transfered to the first destination well of each item (if source is specified -- otherwise the first destination well is assumed to be already prepared).
    Then aliquots are serially transfered from the first destination well to the next, and so on for each item.
    In general, mixing should be performed after each dilution dispense, and perhaps also before the first aspriation -- this can be specified how ???
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    program: {description: "Program identifier", type: "string"}
    dilutionFactor: {description: "Dilution factor by which each subsequent well is diluted", type: number, default: 2}
    dilutionMethod: {description: "How to dilution -- `begin`: distribute diluent to destination wells first (default); `before`: add diluent right before transfering aliquot; `after`: add diluent right after transfering aliquot; `source`: dilute the well that the aliquot will be extracted from.", enum: [begin, before, after, source], default: begin}
    lastWellHandling: {description: "How to handle the last well in a series", type: string, enum: [none, diluteOnly, diluteAndExtract], default: "diluteAndExtract"}
    items: {description: "Array of dilution items", "type": "array", items: {type: pipetter.DilutionItem}}
    diluent: {description: "Diluent to be used in dilution", type: Source}
    sourceLabware: {description: "Labware for source wells", "type": "Plate"}
    destinationLabware: {description: "Labware for source wells", "type": "Plate"}
    volume: {description: "Final volume of dilution wells (with the possible exception of the last well, see parameter `lastWellHandling`)", type: Volume}
    cleanBegin: {description: "Intensity of first cleaning at beginning of pipetting, before first aspiration.", type: string}
    cleanEnd: {description: "Intensity of cleaning after the last dispense.", type: string}
    sourceParams: {description: "Extra parameters for pipetting the source"}
    diluentParams: {description: "Extra parameters for pipetting the diluent"}
    dilutionParams: {description: "Extra parameters for pipetting the diluted aliquots"}
  required: [items]

pipetter.pipetteMixtures:
  description: Pipette the given mixtures into the given destinations.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    program: {description: "Program identifier", type: "string"}
    mixtures: {description: "Array of arrays, where each sub-array is a list of components to be mixed into a destination well", "type": "array"}
    sourceLabware: {description: "Labware for source wells", "type": "Plate"}
    destinationLabware: {description: "Labware for source wells", "type": "Plate"}
    destinations: {description: "Destination specifier", type: Wells}
    order:
      description: "Order in which to pipette the mixtures.  Defaults to the order given in the mixtures array."
      type: array
      items:
        enum: ["index", "destination"]
  required: [mixtures]
