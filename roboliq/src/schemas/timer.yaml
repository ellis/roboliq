timer:
  module: |
    The `timer` commands specify actions using timer equipment.

Timer:
  description: Timer equipment.
  properties:
    type: {enum: [Timer]}
    description: {type: string}
    label: {type: string}
  required: [type]

timer._sleep:
  description: |
    Sleep for a given duration using a specific timer.

    Handler should return `effects` that the timer is not running.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    duration: {description: "Number of seconds to sleep", type: "number"}
    stop: {description: "Whether to stop the timer after waiting, or let it continue", type: boolean}
  required: [agent, equipment, duration]

timer._start:
  description: |
    Start the given timer.

    Handler should return `effects` that the timer is running.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
  required: [agent, equipment]

timer._stop:
  description: |
    Stop the given timer.

    Handler should return `effects` that the timer is not running.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
  required: [agent, equipment]

timer._wait:
  description: |
    Wait until the given timer has reacher the given elapsed time.

    Handler should:

    - expect that the timer (identified by the `equipment` parameter) is running
    - return `effects` that the timer is not running
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    till: {description: "Number of seconds to wait till from the time the timer was started", type: Duration}
    stop: {description: "Whether to stop the timer after waiting, or let it continue", type: boolean}
  required: [agent, equipment, till, stop]

timer.doAndWait:
  description: |
    A control construct to perform the given sub-steps and then wait
    until a certain amount of time has elapsed since the beginning of this command.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    duration: {description: "Number of seconds this command should last", type: Duration}
    steps: {description: "Sub-steps to perform", type: [object, array]}
  required: [duration, steps]

timer.sleep:
  description: Sleep for a given duration.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
    duration: {description: "Duration to sleep (default units is in seconds)", type: Duration}
  required: [duration]

timer.start:
  description: |
    Start a timer.

    If no parameters are supplied, a timer will be automatically chosen.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
  required: []

timer.stop:
  description: |
    Stop a running a timer.

    If only one timer is running, this command can be called without any parameters.
    Otherwise, the equipment identifier must be supplied.
  properties:
    agent: {description: "Agent identifier", type: "Agent"}
    equipment: {description: "Equipment identifier", type: "Equipment"}
  required: []
