roboliq: v1

description: |
  1) Calculate average volume for the given dispense levels (use weight measurements)
  2) Calculate standard deviation of volumes for the given dispense levels (use absorbance measurements)

  Each level will be distributed over an entire plate.
  Right now, the script is just testing 10ul.

  Protocol steps:

  * distribue water to all wells
  * shake
  * read absorbance (validity assumes that dyeVolume is small)
  * weigh plate
  * distribute dye to all wells
  * weight plate
  * repeat 3 times: shake + read absorbance

config:
  evowareCompiler:
    timing: false
    retractTips: false

objects:
  plate1:
    type: Plate
    model: ourlab.model.plateModel_96_round_transparent_nunc
    location: ourlab.mario.site.P2
  dyeLightLabware:
    type: Plate
    model: ourlab.model.troughModel_25ml
    location: ourlab.mario.site.R5
    contents: [Infinity l, dyeLight]
  dyeLight:
    type: Liquid
    wells: dyeLightLabware(C01 down F01)

  design:
    type: Design
    randomSeed: 123
    conditions:
      agent: mario
      site: P2
      wellVolume: 150 ul
      dyeVolume*: [10 ul]
      dyeSource: [dyeLight]
      waterVolume=calculate: "wellVolume - dyeVolume"
      plate: [plate1]
      orderA=range: {}
      orderB*:
      - stageB: weigh
        status*: [empty, full]
      - stageB: read
        status: full
        replicate*: 3
      id=range: {}

steps:
  data:
    source: design
  1:
    command: pipetter.cleanTips
    equipment: ourlab.mario.liha
    intensity: thorough
    syringes: [1,2,3,4]
  2:
    description: "Handle plates"
    command: experiment.forEachGroup
    groupBy: plate
    steps:
      description: "`Handle {{$plate}}`"
      1:
        description: "Fill the plate with water"
        command: pipetter.pipette
        sources: ourlab.mario.systemLiquid
        destinations: "`{{$plate}}(all)`"
        volumes: $waterVolume
        clean: none
        cleanEnd: flush
      2:
        description: "Shake"
        command: shaker.shakePlate
        object: $plate
        program:
          duration: 1 minute
      3:
        description: "Measure absorbance"
        data: {where: 'status == "empty"'}
        command: absorbanceReader.measurePlate
        object: $plate
        program:
          excitationWavelength: 480nm
          wells: "`{{$plate}}(all)`"
        outputDataset: "absorbance"
      4:
        description: "Weigh dye-less plate"
        data: {where: 'status == "empty"'}
        command: scale.weigh
        object: $plate
        outputDataset: "weight"
      5:
        description: "Distribute dye"
        command: pipetter.pipette
        sources: $dyeSource
        destinations: "`{{$plate}}(all)`"
        volumes: $dyeVolume
        clean: flush
      6:
        description: "Weigh full plate"
        data: {where: 'status == "full"'}
        command: scale.weigh
        object: $plate
        outputDataset: "weight"
      7:
        description: "Repeat shake+reads"
        data: { where: 'stageB == "read"' }
        command: experiment.forEachRow
        steps:
          1:
            description: "Shake"
            command: shaker.shakePlate
            object: $plate
            program:
              duration: 1 minute
          2:
            description: "Measure absorbance"
            command: absorbanceReader.measurePlate
            object: $plate
            program:
              excitationWavelength: 480nm
              wells: "`{{$plate}}(all)`"
            outputDataset: "absorbance"
