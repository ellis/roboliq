roboliq: v1

description: |
  Water test for the initial screening experiment using a
  5-factor central composite design.

config:
  evowareCompiler:
    timing: false
    retractTips: false

objects:
  plate1:
    type: Plate
    model: ourlab.model.plateModel_96_round_transparent_nunc
    location: ourlab.mario.site.P3
  tubeLabware1:
    type: Plate
    model: ourlab.model.tubeHolderModel_15ml
    location: ourlab.mario.site.T1
  buffer: {type: Liquid, wells: tubeLabware1(A01)}
  glucose: {type: Liquid, wells: tubeLabware1(B01)}
  nps: {type: Liquid, wells: tubeLabware1(C01)}
  vitamin: {type: Liquid, wells: tubeLabware1(D01)}
  trace: {type: Liquid, wells: tubeLabware1(E01)}
  strain: {type: Liquid, wells: tubeLabware1(F01)}

  design:
    type: Design
    randomSeed: 1234
    description: |
      $2^{5-1}$ partial factorial central composite design, repeated three
      times at different starting points.

      * $x1$: Buffer concentration
      * $x2$: Glucose concentration
      * $x3$: Nitrogen concentration
      * $x4$: Phosphate/Sulfur/Trace elements mix concentration
      * $x5$: Vitamin mix concentation

    conditions:
      node*:
        - x1c:
      part*:
        factorial:
          x1*: [-1, 1]
          x2*: [-1, 1]
          x3*: [-1, 1]
          x4*: [-1, 1]
          x5*: [-1, 1]
          replicate*: 2
        axial:
          .axis*:
            - {x1*: [-1, 1], x2: 0, x3: 0, x4: 0, x5: 0}
            - {x2*: [-1, 1], x1: 0, x3: 0, x4: 0, x5: 0}
            - {x3*: [-1, 1], x2: 0, x1: 0, x4: 0, x5: 0}
            - {x4*: [-1, 1], x2: 0, x3: 0, x1: 0, x5: 0}
            - {x5*: [-1, 1], x2: 0, x3: 0, x4: 0, x1: 0}
          replicate*: 2
        central:
          x1: 0
          x2: 0
          x3: 0
          x4: 0
          x5: 0
          replicate*: 6
      plate: plate1
      wellNum=range:
        order: shuffle
      well=allocateWells:
        rows: 8
        columns: 12
        orderBy: wellNum
      id=range:
        orderBy: [wellNum]
    orderBy: [wellNum]

steps:
  data:
    source: design
  1:
    command: pipetter.cleanTips
    equipment: ourlab.mario.liha
    intensity: thorough
  2:
    description: "Pipette media mixtures"
      command: pipetter.pipetteMixtures
      destinationLabware: $plate
      mixtures:
        "#data":
          template:
            destination: $well
            sources:
              - {source: buffer, volume: $bufferVolume}
              - {source: glucose, volume: $glucoseVolume}
              - {source: nps, volume: $npsVolume}
              - {source: vitamin, volume: $vitaminVolume}
              - {source: trace, volume: $traceVolume}
      clean: thorough
      cleanBetweenSameSource: none
  3:
    description: "Shake plate1"
    command: shaker.shakePlate
    object: $plate
    program:
      duration: 1 minute
  4:
    description: "Pipette strain or water"
      command: pipetter.pipetteMixtures
      destinationLabware: $plate
      mixtures:
        "#data":
          template:
            destination: $well
            sources:
              - {source: buffer, volume: $bufferVolume}
              - {source: glucose, volume: $glucoseVolume}
              - {source: nps, volume: $npsVolume}
              - {source: vitamin, volume: $vitaminVolume}
              - {source: trace, volume: $traceVolume}
      clean: thorough
      cleanEnd: decontaminate
  5:
    description: "Measure absorbance"
    command: absorbanceReader.measurePlate
    object: $plate
    program:
      excitationWavelength: 480nm
      wellDesignFactor: well
      userValues: {cycle: 0}
    outputDataset: "absorbance"
      3:
        description: "Cycles of z-level detection"
        # data: {where: 'cycle > 0'}
        command: experiment.forEachGroup
        groupBy: cycle
        steps:
          description: "`Cycle {{$cycle}}`"
          1:
            command: pipetter.measureVolume
            wellLabware: $plate
            items:
              "#data":
                template:
                  syringe: $syringe
                  well: $well
                  program: $liquidClass
            clean: flush
            outputDataset: "volume"
          2:
            description: "Measure absorbance"
            command: absorbanceReader.measurePlate
            object: $plate
            program:
              excitationWavelength: 480nm
              wellDesignFactor: well
            outputDataset: "absorbance"
