roboliq: v1

description: |
  Test evaporation in wells while being shaken in the reader for 24 hours.

  Protocol steps:

  * Fill balancePlate to 300ul with water
  * Put balancePlate into centrifuge
  * Fill plate1 wells to 300ul with dye mixture (absorbance should be around 1)
    * have controls wells that just have water too -- one in each column (12 in total)
  * Weigh plate1
  * Read plate1, shake for 24? hours, read plate
  * Move plate1 back to bench
  * Weigh plate1
  * Calculate total volume loss
  * #Centrifuge plate1
  * #Shake plate1
  * Extract 50ul from each well on plate1 to plate2
  * Fill plate2 to 250ul with water
  * Shake plate2
  * Read plate2
  * Calculate relative volume loss based on absorbance readout
  * Calculate volume loss in each well

config:
  evowareCompiler:
    timing: false
    retractTips: false

objects:
  plate1:
    type: Plate
    model: ourlab.model.plateModel_96_round_transparent_nunc
    location: ourlab.mario.site.P7
  plate1:
    type: Plate
    model: ourlab.model.plateModel_96_round_transparent_nunc
    location: ourlab.mario.site.P8
  dyeLabware:
    type: Plate
    model: ourlab.model.troughModel_100ml
    location: ourlab.mario.site.R6
    contents: [Infinity l, dye]
  dye:
    type: Liquid
    wells: dyeLabware(C01 down F01)

  design:
    type: Design
    randomSeed: 1234
    description: |
      5-factor central composite design.
    conditions:
      part*:
        factorial:
          x1*: [-1, 1]
          x2*: [-1, 1]
          x3*: [-1, 1]
          x4*: [-1, 1]
          x5*: [-1, 1]
          replicate*: 2
        axial:
          .axis*:
            - {x1*: [-1, 1], x2: 0, x3: 0, x4: 0, x5: 0}
            - {x2*: [-1, 1], x1: 0, x3: 0, x4: 0, x5: 0}
            - {x3*: [-1, 1], x2: 0, x1: 0, x4: 0, x5: 0}
            - {x4*: [-1, 1], x2: 0, x3: 0, x1: 0, x5: 0}
            - {x5*: [-1, 1], x2: 0, x3: 0, x4: 0, x1: 0}
          replicate*: 2
        central:
          x1: 0
          x2: 0
          x3: 0
          x4: 0
          x5: 0
          replicate*: 6
        control:
          x1: 0
          x2: 0
          x3: 0
          x4: 0
          x5: 0
          replicate*: 6
      plate: plate1
      wellNum=range:
        order: shuffle
      well=allocateWells:
        rows: 8
        columns: 12
        orderBy: wellNum
      id=range:
        orderBy: [wellNum]
    orderBy: [wellNum]

steps:
  data:
    source: design
  1:
    command: pipetter.cleanTips
    equipment: ourlab.mario.liha
    intensity: thorough
  2:
    description: "Pipette media mixtures"
      command: pipetter.pipetteMixtures
      destinationLabware: $plate
      mixtures:
        "#data":
          template:
            destination: $well
            sources:
              - {source: buffer, volume: $bufferVolume}
              - {source: glucose, volume: $glucoseVolume}
              - {source: nps, volume: $npsVolume}
              - {source: vitamin, volume: $vitaminVolume}
              - {source: trace, volume: $traceVolume}
      clean: thorough
      cleanBetweenSameSource: none
  3:
    description: "Shake plate1"
    command: shaker.shakePlate
    object: $plate
    program:
      duration: 1 minute
  4:
    description: "Pipette strain or water"
      command: pipetter.pipetteMixtures
      destinationLabware: $plate
      mixtures:
        "#data":
          template:
            destination: $well
            sources:
              - {source: buffer, volume: $bufferVolume}
              - {source: glucose, volume: $glucoseVolume}
              - {source: nps, volume: $npsVolume}
              - {source: vitamin, volume: $vitaminVolume}
              - {source: trace, volume: $traceVolume}
      clean: thorough
      cleanEnd: decontaminate
  5:
    description: "Measure absorbance"
    command: absorbanceReader.measurePlate
    object: $plate
    program:
      excitationWavelength: 480nm
      wellDesignFactor: well
      userValues: {cycle: 0}
    outputDataset: "absorbance"
      3:
        description: "Cycles of z-level detection"
        # data: {where: 'cycle > 0'}
        command: experiment.forEachGroup
        groupBy: cycle
        steps:
          description: "`Cycle {{$cycle}}`"
          1:
            command: pipetter.measureVolume
            wellLabware: $plate
            items:
              "#data":
                template:
                  syringe: $syringe
                  well: $well
                  program: $liquidClass
            clean: flush
            outputDataset: "volume"
          2:
            description: "Measure absorbance"
            command: absorbanceReader.measurePlate
            object: $plate
            program:
              excitationWavelength: 480nm
              wellDesignFactor: well
            outputDataset: "absorbance"
