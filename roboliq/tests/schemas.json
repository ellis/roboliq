{
	"system.call": {
		"description": "Call a template function.\n\nThe template function should be an object of type `Template` with a property `template` holding either a Mustache template string or an object whose properties may be Mustache template strings. The template will be expanded using the values passed in the `params` property.",
		"properties": {
			"name": {
				"description": "Name of the template function.",
				"type": "Object"
			},
			"params": {
				"description": "Parameters to pass to the template function.",
				"type": "object"
			}
		},
		"required": [
			"name"
		]
	},
	"system.repeat": {
		"description": "Repeat the given command a given number of times.",
		"properties": {
			"count": {
				"description": "The number of times to repeat.",
				"type": "integer"
			},
			"steps": {
				"description": "The sequence of commands to repeat.",
				"type": "object"
			}
		},
		"required": [
			"count"
		]
	},
	"equipment._run": {
		"description": "Run the given equipment.\n\nThis is a generic command, and any addition parameters may be passed that are required by the target equipment.\n",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			}
		},
		"required": [
			"agent",
			"equipment"
		]
	},
	"equipment.open": {
		"description": "Open the given equipment.\n\nThis is a generic command that expands to a sub-command named `equipment.open|${agent}|${equipment}`. That command should be defined in your configuration for your lab.\n\nThe handler should return effects indicating that the equipment is open.\n",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			}
		},
		"required": [
			"agent",
			"equipment"
		]
	},
	"equipment.openSite": {
		"description": "Open an equipment site.\nThis command assumes that only one equipment site can be open at a time.\n\nThis is a generic command that expands to a sub-command named\n`equipment.openSite|${agent}|${equipment}`.\nThat command should be defined in your configuration for your lab.\n\nThe handler should return effects indicating that the equipment is open,\nthe given site is open, and all other equipment sites are closed.\n",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"site": {
				"description": "Site identifier",
				"type": "Site"
			}
		},
		"required": [
			"agent",
			"equipment",
			"site"
		]
	},
	"equipment.close": {
		"description": "Close the given equipment.\n\nThis is a generic command that expands to a sub-command named\n`equipment.close|${agent}|${equipment}`.\nThat command should be defined in your lab configuration.\n\nThe handler should return effects indicating the the equipment is closed\nand all of its sites are closed.\n",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			}
		},
		"required": [
			"agent",
			"equipment"
		]
	},
	"centrifuge": {
		"module": "The `centrifuge` commands specify actions using centrifuge equipment.\n"
	},
	"Centrifuge": {
		"description": "Centrifuge equipment.",
		"properties": {
			"type": {
				"enum": [
					"Centrifuge"
				]
			},
			"description": {
				"type": "string"
			},
			"label": {
				"type": "string"
			},
			"sitesInternal": {
				"type": "array",
				"items": {
					"type": "Site"
				}
			}
		},
		"required": [
			"type",
			"sitesInternal"
		]
	},
	"centrifuge.centrifuge2": {
		"description": "Centrifuge using two plate",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"program": {
				"description": "Program for centrifuging"
			},
			"object1": {
				"description": "Plate identifier 1",
				"type": "Plate"
			},
			"object2": {
				"description": "Plate identifier 2",
				"type": "Plate"
			},
			"site1": {
				"description": "Location identifier for the centrifugation site of object1",
				"type": "Site"
			},
			"site2": {
				"description": "Location identifier for the centrifugation site of object2",
				"type": "Site"
			},
			"destinationAfter1": {
				"description": "Location identifier for where object1 should be placed after centrifugation",
				"type": "Site"
			},
			"destinationAfter2": {
				"description": "Location identifier for where object2 should be placed after centrifugation",
				"type": "Site"
			}
		},
		"required": [
			"program",
			"object1",
			"object2"
		]
	},
	"centrifuge.insertPlates2": {
		"description": "Insert up to two plates into the centrifuge.",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"object1": {
				"description": "Plate identifier 1",
				"type": "Plate"
			},
			"object2": {
				"description": "Plate identifier 2",
				"type": "Plate"
			},
			"site1": {
				"description": "Location identifier for the centrifugation site of object1",
				"type": "Site"
			},
			"site2": {
				"description": "Location identifier for the centrifugation site of object2",
				"type": "Site"
			}
		},
		"required": []
	},
	"Reader": {
		"description": "Reader equipment.",
		"properties": {
			"type": {
				"enum": [
					"Reader"
				]
			},
			"description": {
				"type": "string"
			},
			"label": {
				"type": "string"
			}
		},
		"required": [
			"type"
		]
	},
	"fluorescenceReader.measurePlate": {
		"description": "Measure the fluorescence of a plate.",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"programFile": {
				"description": "Program filename",
				"type": "string"
			},
			"programData": {
				"description": "Program data"
			},
			"outputFile": {
				"description": "Filename for output",
				"type": "string"
			},
			"object": {
				"description": "Plate identifier",
				"type": "Plate"
			},
			"site": {
				"description": "Site identifier in reader",
				"type": "Site"
			},
			"destinationAfter": {
				"description": "Site to move the plate to after measurement",
				"type": "Site"
			}
		},
		"required": [
			"outputFile",
			"object"
		]
	},
	"Pipetter": {
		"description": "Pipetting equipment.",
		"properties": {
			"type": {
				"enum": [
					"Pipetter"
				]
			},
			"description": {
				"type": "string"
			},
			"label": {
				"type": "string"
			}
		},
		"required": [
			"type"
		]
	},
	"Syringe": {
		"description": "Pipetting syringe.",
		"properties": {
			"type": {
				"enum": [
					"Syringe"
				]
			},
			"description": {
				"type": "string"
			},
			"label": {
				"type": "string"
			},
			"tipModel": {
				"type": "string"
			},
			"tipModelPermanent": {
				"type": "string"
			}
		},
		"required": [
			"type"
		]
	},
	"pipetter._AspirateItem": {
		"description": "Parameters for pipette items.",
		"properties": {
			"syringe": {
				"description": "Syringe identifier",
				"type": [
					"integer",
					"name"
				]
			},
			"well": {
				"description": "Source specifier",
				"type": "Well"
			},
			"volume": {
				"description": "Volume",
				"type": "Volume"
			}
		},
		"required": [
			"syringe",
			"source",
			"volume"
		]
	},
	"pipetter._DispenseItem": {
		"description": "Parameters for pipette items.",
		"properties": {
			"syringe": {
				"description": "Syringe identifier",
				"type": [
					"string",
					"integer"
				]
			},
			"well": {
				"description": "Destination specifier",
				"type": "Well"
			},
			"volume": {
				"description": "Volume",
				"type": "Volume"
			}
		},
		"required": [
			"syringe",
			"destination",
			"volume"
		]
	},
	"pipetter.CleaningIntensity": {
		"description": "Intensity of cleaning.\n\nThe enum lists the intensities in increase order.\n",
		"enum": [
			"none",
			"flush",
			"light",
			"thorough",
			"decontaminate"
		]
	},
	"pipetter.PipetteItem": {
		"description": "Parameters for pipette items.",
		"properties": {
			"syringe": {
				"description": "Syringe identifier",
				"type": [
					"string",
					"integer"
				]
			},
			"source": {
				"description": "Source specifier",
				"type": "Source"
			},
			"destination": {
				"description": "Destination specifier",
				"type": "Well"
			},
			"volume": {
				"description": "Volume",
				"type": "Volume"
			}
		}
	},
	"pipetter._PipetteItem": {
		"description": "Parameters for low-level pipette items.",
		"properties": {
			"syringe": {
				"description": "Syringe identifier",
				"type": [
					"string",
					"integer"
				]
			},
			"source": {
				"description": "Source specifier",
				"type": "Well"
			},
			"destination": {
				"description": "Destination specifier",
				"type": "Well"
			},
			"volume": {
				"description": "Volume",
				"type": "Volume"
			}
		},
		"required": [
			"syringe",
			"source",
			"destination",
			"volume"
		]
	},
	"pipetter._aspirate": {
		"description": "Aspirate liquids from sources into syringes.",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"program": {
				"description": "Program identifier",
				"type": "string"
			},
			"items": {
				"description": "Data about what should be aspirated from where",
				"type": "array",
				"items": {
					"type": "pipetter._AspirateItem"
				}
			}
		},
		"required": [
			"agent",
			"equipment",
			"program"
		]
	},
	"pipetter._dispense": {
		"description": "Dispense liquids from sryinges into destinations.",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"program": {
				"description": "Program identifier",
				"type": "string"
			},
			"items": {
				"description": "Data about what should be dispensed where",
				"type": "array",
				"items": {
					"type": "pipetter._DispenseItem"
				}
			}
		},
		"required": [
			"agent",
			"equipment",
			"program"
		]
	},
	"pipetter._pipette": {
		"description": "Pipette liquids from sources to destinations.",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"program": {
				"description": "Program identifier",
				"type": "string"
			},
			"items": {
				"description": "Data about what should be pipetted where",
				"type": "array",
				"items": {
					"type": "pipetter._PipetteItem"
				}
			}
		},
		"required": [
			"agent",
			"equipment",
			"program"
		]
	},
	"pipetter._washTips": {
		"description": "Clean the pipetter tips.",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"program": {
				"description": "Program identifier",
				"type": "name"
			},
			"syringes": {
				"description": "List of syringe identifiers",
				"type": "array",
				"items": {
					"type": "Syringe"
				}
			},
			"intensity": {
				"description": "Intensity of the cleaning",
				"type": "pipetter.CleaningIntensity"
			}
		},
		"required": [
			"agent",
			"equipment",
			"syringes",
			"intensity"
		]
	},
	"pipetter.cleanTips": {
		"description": "Clean the pipetter tips.",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"program": {
				"description": "Program identifier",
				"type": "string"
			},
			"items": {
				"description": "List of which syringes to clean at which intensity",
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"syringe": {
							"description": "Syringe identifier",
							"type": "Syringe"
						},
						"intensity": {
							"description": "Intensity of the cleaning",
							"type": "pipetter.CleaningIntensity"
						}
					},
					"required": [
						"syringe"
					]
				}
			},
			"syringes": {
				"description": "Optional list of syringes to serve as default for missing syringes in items list",
				"type": "array",
				"items": {
					"type": "Syringe"
				}
			},
			"intensity": {
				"description": "Optional intensity to serve as default intensity for missing intensities in items list",
				"type": "pipetter.CleaningIntensity"
			}
		}
	},
	"pipetter.pipette": {
		"description": "Pipette liquids from sources to destinations.",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"program": {
				"description": "Program identifier",
				"type": "string"
			},
			"items": {
				"description": "Data about what should be pipetted where",
				"type": "array",
				"items": {
					"type": "pipetter.PipetteItem"
				}
			},
			"sources": {
				"description": "Specifier for source(s) to aspirate from, if missing from items",
				"type": "Sources"
			},
			"destinations": {
				"description": "Specifier for destination(s) to despense to, if missing from items",
				"type": "Wells"
			},
			"volumes": {
				"description": "Volume(s) to pipette, if missing from items",
				"type": "Volumes"
			},
			"clean": {
				"description": "Intensity of cleaning",
				"type": "string"
			},
			"cleanBegin": {
				"description": "intensity of first cleaning at beginning of pipetting, before first aspiration.",
				"type": "string"
			},
			"cleanBetween": {
				"description": "Intensity of cleaning between different liquids.",
				"type": "string"
			},
			"cleanBetweenSameSource": {
				"description": "Intensity of cleaning between transfers of the same liquid.",
				"type": "string"
			},
			"cleanEnd": {
				"description": "Intensity of cleaning after the last dispense.",
				"type": "string"
			}
		},
		"required": []
	},
	"pipetter.pipetteMixtures": {
		"description": "Pipette the given mixtures into the given destinations.",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"program": {
				"description": "Program identifier",
				"type": "string"
			},
			"mixtures": {
				"description": "Array of arrays, where each sub-array is a list of components to be mixed into a destination well",
				"type": "array"
			},
			"destinations": {
				"description": "Destination specifier",
				"type": "Wells"
			},
			"order": {
				"description": "Order in which to pipette the mixtures.  Defaults to the order given in the mixtures array.",
				"type": "array",
				"items": {
					"enum": [
						"index",
						"destination"
					]
				}
			}
		},
		"required": [
			"mixtures",
			"destinations"
		]
	},
	"Sealer": {
		"description": "Sealing equipment.",
		"properties": {
			"type": {
				"enum": [
					"Sealer"
				]
			},
			"description": {
				"type": "string"
			},
			"label": {
				"type": "string"
			}
		},
		"required": [
			"type"
		]
	},
	"sealer.sealPlate": {
		"description": "Seal a plate.",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"program": {
				"description": "Program identifier for sealing",
				"type": "string"
			},
			"object": {
				"description": "Plate identifier",
				"type": "Plate"
			},
			"site": {
				"description": "Site identifier in reader",
				"type": "Site"
			},
			"destinationAfter": {
				"description": "Site to move the plate to after measurement",
				"type": "Site"
			}
		},
		"required": [
			"object"
		]
	},
	"Timer": {
		"description": "Timer equipment.",
		"properties": {
			"type": {
				"enum": [
					"Timer"
				]
			},
			"description": {
				"type": "string"
			},
			"label": {
				"type": "string"
			}
		},
		"required": [
			"type"
		]
	},
	"timer._sleep": {
		"description": "Sleep for a given duration using a specific timer.\n\nHandler should return `effects` that the timer is not running.\n",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"duration": {
				"description": "Number of seconds to sleep",
				"type": "number"
			},
			"stop": {
				"description": "Whether to stop the timer after waiting, or let it continue",
				"type": "boolean"
			}
		},
		"required": [
			"agent",
			"equipment",
			"duration"
		]
	},
	"timer._start": {
		"description": "Start the given timer.\n\nHandler should return `effects` that the timer is running.\n",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			}
		},
		"required": [
			"agent",
			"equipment"
		]
	},
	"timer._stop": {
		"description": "Stop the given timer.\n\nHandler should return `effects` that the timer is not running.\n",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			}
		},
		"required": [
			"agent",
			"equipment"
		]
	},
	"timer._wait": {
		"description": "Wait until the given timer has reacher the given elapsed time.\n\nHandler should:\n\n- expect that the timer (identified by the `equipment` parameter) is running\n- return `effects` that the timer is not running\n",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"till": {
				"description": "Number of seconds to wait till from the time the timer was started",
				"type": "Duration"
			},
			"stop": {
				"description": "Whether to stop the timer after waiting, or let it continue",
				"type": "boolean"
			}
		},
		"required": [
			"agent",
			"equipment",
			"till",
			"stop"
		]
	},
	"timer.doAndWait": {
		"description": "A control construct to perform the given sub-steps and then wait\nuntil a certain amount of time has elapsed since the beginning of this command.\n",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"duration": {
				"description": "Number of seconds this command should last",
				"type": "Duration"
			},
			"steps": {
				"description": "Sub-steps to perform",
				"type": [
					"object",
					"array"
				]
			}
		},
		"required": [
			"duration",
			"steps"
		]
	},
	"timer.sleep": {
		"description": "Sleep for a given duration.",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"duration": {
				"description": "Duration to sleep (default units is in seconds)",
				"type": "Duration"
			}
		},
		"required": [
			"duration"
		]
	},
	"timer.start": {
		"description": "Start a timer.\n\nIf no parameters are supplied, a timer will be automatically chosen.\n",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			}
		},
		"required": []
	},
	"timer.stop": {
		"description": "Stop a running a timer.\n\nIf only one timer is running, this command can be called without any parameters.\nOtherwise, the equipment identifier must be supplied.\n",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			}
		},
		"required": []
	},
	"Transporter": {
		"description": "Labware transporter equipment.",
		"properties": {
			"type": {
				"enum": [
					"Transporter"
				]
			},
			"description": {
				"type": "string"
			},
			"label": {
				"type": "string"
			}
		},
		"required": [
			"type"
		]
	},
	"transporter._movePlate": {
		"description": "Transport a plate to a destination.\n\nHandler should return `effects` with the plate's new location.\n",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"program": {
				"description": "Program identifier",
				"type": "name"
			},
			"object": {
				"description": "Plate identifier",
				"type": "Plate"
			},
			"destination": {
				"description": "Site to move the plate to",
				"type": "Site"
			}
		},
		"required": [
			"agent",
			"equipment",
			"object",
			"destination"
		]
	},
	"transporter.movePlate": {
		"description": "Transport a plate to a destination.\n",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"object": {
				"description": "Plate identifier",
				"type": "Plate"
			},
			"destination": {
				"description": "Site to move the plate to",
				"type": "Site"
			}
		},
		"required": [
			"object",
			"destination"
		]
	},
	"Agent": {
		"description": "An agent that can execute commands.",
		"properties": {
			"type": {
				"enum": [
					"Agent"
				]
			},
			"description": {
				"type": "string"
			},
			"label": {
				"type": "string"
			}
		},
		"required": [
			"type"
		]
	},
	"Liquid": {
		"description": "Liquid substance.",
		"properties": {
			"type": {
				"enum": [
					"Liquid"
				]
			},
			"description": {
				"type": "string"
			},
			"label": {
				"type": "string"
			},
			"wells": {
				"type": "array"
			}
		},
		"required": [
			"type"
		]
	},
	"Plate": {
		"description": "Plate labware.",
		"properties": {
			"type": {
				"enum": [
					"Plate"
				]
			},
			"description": {
				"type": "string"
			},
			"label": {
				"type": "string"
			},
			"model": {
				"type": "PlateModel"
			},
			"location": {
				"type": "Site"
			},
			"contents": {
				"type": [
					"object",
					"array"
				]
			}
		},
		"required": [
			"type"
		]
	},
	"PlateModel": {
		"description": "Model for plate labware.",
		"properties": {
			"type": {
				"enum": [
					"PlateModel"
				]
			},
			"description": {
				"type": "string"
			},
			"label": {
				"type": "string"
			},
			"rows": {
				"type": "integer"
			},
			"columns": {
				"type": "integer"
			}
		},
		"required": [
			"type",
			"rows",
			"columns"
		]
	},
	"Site": {
		"description": "Represents a bench site where labware can placed.",
		"properties": {
			"type": {
				"enum": [
					"Site"
				]
			},
			"description": {
				"type": "string"
			},
			"label": {
				"type": "string"
			}
		},
		"required": [
			"type"
		]
	},
	"Template": {
		"description": "A template object, used by the `system.call` command.",
		"properties": {
			"type": {
				"enum": [
					"Template"
				]
			},
			"description": {
				"type": "string"
			},
			"label": {
				"type": "string"
			},
			"template": {}
		},
		"required": [
			"type"
		]
	},
	"Variable": {
		"description": "User-defined variable.",
		"properties": {
			"type": {
				"enum": [
					"Variable"
				]
			},
			"description": {
				"type": "string"
			},
			"label": {
				"type": "string"
			},
			"value": {}
		},
		"required": [
			"type"
		]
	},
	"EvowareRobot": {
		"properties": {
			"type": {
				"enum": [
					"EvowareRobot"
				]
			}
		},
		"required": [
			"type"
		]
	},
	"EvowareWashProgram": {
		"properties": {
			"type": {
				"enum": [
					"EvowareWashProgram"
				]
			}
		},
		"required": [
			"type"
		]
	},
	"equipment.close|ourlab.mario.evoware|ourlab.mario.centrifuge": {
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			}
		},
		"required": [
			"agent",
			"equipment"
		]
	},
	"equipment.open|ourlab.mario.evoware|ourlab.mario.centrifuge": {
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			}
		},
		"required": [
			"agent",
			"equipment"
		]
	},
	"equipment.openSite|ourlab.mario.evoware|ourlab.mario.centrifuge": {
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"site": {
				"description": "Site identifier",
				"type": "Site"
			}
		},
		"required": [
			"agent",
			"equipment",
			"site"
		]
	},
	"equipment.run|ourlab.mario.evoware|ourlab.mario.centrifuge": {
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"program": {
				"description": "Program for centrifuging",
				"type": "object",
				"properties": {
					"rpm": {
						"type": "number",
						"default": 3000
					},
					"duration": {
						"type": "Duration",
						"default": "30 s"
					},
					"spinUpTime": {
						"type": "Duration",
						"default": "9 s"
					},
					"spinDownTime": {
						"type": "Duration",
						"default": "9 s"
					},
					"temperature": {
						"type": "number",
						"default": 25
					}
				}
			}
		},
		"required": [
			"program"
		]
	},
	"equipment.run|ourlab.mario.evoware|ourlab.mario.sealer": {
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"program": {
				"description": "Program identifier for sealing",
				"type": "string"
			}
		},
		"required": [
			"agent",
			"equipment",
			"program"
		]
	},
	"equipment.close|ourlab.mario.evoware|ourlab.mario.reader": {
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			}
		},
		"required": [
			"agent",
			"equipment"
		]
	},
	"equipment.open|ourlab.mario.evoware|ourlab.mario.reader": {
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			}
		},
		"required": [
			"agent",
			"equipment"
		]
	},
	"equipment.openSite|ourlab.mario.evoware|ourlab.mario.reader": {
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"site": {
				"description": "Site identifier",
				"type": "Site"
			}
		},
		"required": [
			"agent",
			"equipment",
			"site"
		]
	},
	"equipment.run|ourlab.mario.evoware|ourlab.mario.reader": {
		"description": "Run our Infinit M200 reader using either programFile or programData",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"programFile": {
				"description": "Program filename",
				"type": "File"
			},
			"programData": {
				"description": "Program data"
			},
			"outputFile": {
				"description": "Filename for measured output",
				"type": "string"
			}
		},
		"required": [
			"outputFile"
		]
	},
	"equipment.run|ourlab.mario.evoware|ourlab.mario.shaker": {
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"program": {
				"description": "Program identifier for shaking",
				"type": "string"
			}
		}
	},
	"pipetter.cleanTips|ourlab.mario.evoware|ourlab.mario.liha": {
		"description": "Clean the pipetter tips.",
		"properties": {
			"agent": {
				"description": "Agent identifier",
				"type": "Agent"
			},
			"equipment": {
				"description": "Equipment identifier",
				"type": "Equipment"
			},
			"program": {
				"description": "Program identifier",
				"type": "string"
			},
			"items": {
				"description": "List of which syringes to clean at which intensity",
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"syringe": {
							"description": "Syringe identifier",
							"type": "Syringe"
						},
						"intensity": {
							"description": "Intensity of the cleaning",
							"type": "pipetter.CleaningIntensity"
						}
					},
					"required": [
						"syringe",
						"intensity"
					]
				}
			}
		},
		"required": [
			"agent",
			"equipment",
			"items"
		]
	}
}
