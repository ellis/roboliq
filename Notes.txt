Script generation errors:
	test_1x1_8x6_3: try to asperate 18ul, but error: tip 5: 6ul too much in diluter
	
Fabian: Why do we have two wash stations at grids 1 and 2?  Let's go through each line of Decontamination_WashBigTips.esc

Large tips: 950µl max; but only 900ul if we need to use the decontamination wash
Small tips: 45µl max

Liquid class depends:
	tips
	liquid sucked up (viscosity, conductivity, live cells?)
	volume already in target well
	
Suggested liquid classes:
	Large tips:
		Water free dispense (use for water, buffers, ethenol)
		Water wet contact
		Water dry contact High density plate (goes down really slow for 1536 (32x48) plates in order to avoid hurting the tips if they hit sometime) (use this for any dry contact dispense, not just high density plates)
		DMSO free dispense
		Comp cells free dispense
		System Liquid free dispense (System Liquid is in principle "water", but we can use the system's liquid)
		D-BSSE Decon (in principle, water wet contact with mixing: just for the the decontamination script)
	Small tips:
		D-BSSE Te-PS Dry Contact
		D-BSSE Te-PS Wet Contact
		D-BSSE Decon
		
	When accuracy doesn't matter, can use free dispense
	Contact for low dispense volumes
	Dry contact: only with empty plate
	cells: always Comp cells free dispense
	
NOTE: critical thing in a transformation is speed, though the speed of aspirate and dispense has to be slow in order not to kill the cells

CompleteYeastTransformation
	PCR Dispense
		REQUIRE: "template" cooled (full 96 plate) [change to "DNA template"]
		REQUIRE: plate A cooled
		wash 25 + 4ml fast
		wash 4 + 1ml
		?? Why the two different washes?  How can this be specified in a manner independent of robot setup?
		pipette 3µl "ligation mix" to plate A, decontaminate before each aspirate and after completion
		?? why decontaminate between pipetting? is something already in the wells of plate A?
	Competent Yeast Dispension
		REQUIRE: "plasmid DNA" cooled (single 20 well)
		REQUIRE: "competent cells" cooled (single 8 well)
		?? Is the long carrier cooled differently than the 20-well carrier?
		REQUIRE: "ssDNA" cooled (single 20 well)
		REQUIRE: "LiAcMix" cooled (single 8 well)
		?? How was the choice made about which plate/well to put the supplies on?
		wash 25 + 4ml fast
		wash 4 + 1ml
		?? Is a wash necessary after a prior decontamination?  before a pending decontamination?
		A: done when the outside of the tips is expected to be very dirty, and we don't want to contaminate the decontamination wash
		pipette 2µl "plasmid DNA" to plate A, decontaminate before first aspirate and after completion
		pipette 30µl "competent cells" to plate A, decontaminate before each aspirate and after completion
		pipette 5µl "ssDNA" to plate A, wash 4+3ml before each aspirate and after completion
		?? Why 4+3ml wash?  How can this be specified in a manner independent of robot setup?
		pipette 90µl "LiAcMix" to plate A, wash 4+3ml before each aspirate and after completion
		mix 90µl plate A, decontaminate before each mix
		?? Why decontaminate when each well should essentially the same mixture?
	Heat Shock
		repeat 4 times:
			?? might a plate NOT be on a cooled carried upon entry to this subroutine?
			A: need to be flexible; bacteria should be incubated at 4deg, yeast at 30deg
			wait (IncubationTime / 4 - 60)
			shake plate A (…parameters…)
			move plate A to cooled carrier
		?? What's happening during incubation?
		?? How critical is the incubation time?
		A: for bacteria, highly; for yeast, not.
		?? Is the difference in time of mix completion among the wells significant?
		?? At this point, the PCR lid is opened and the tips are sterilized.  Why?  Is this part of the timing?
		//open lid
		wash 25+4ml fast
		wash 4+1ml
		decontaminate
		?? Why wash AND decontaminate?  If we wash after decontamination, are the tips contaminated again?
		pcr plate A for HeatShockTime then return to cooled carrier
		?? How does TRobot1 know when to start cycling?  Why does the lid stay open during the process?  Or does it?
		A: It should be turned on to 42deg at the start -- currently done manually
		//transfer plate A to cooled carrier
		//close lid
	Yeast Cell Filtration
		REQUIRE: Plate B is a filter plate
		REQUIRE: "RecoveryMedia" cooled (single 8 well)
		pipette 140µl from plate A to plate B, wash fast 3+4ml before each aspirate and after completion
		?? Why 3+4ml wash?
		vacuum_separate plate B
			ApplyVacuumRear(300)
			wait 900s
			VentRear()
			?? What does VentRear() mean?
		?? Does everyone have a vacuum? Or is the separation performed in various ways?
		A: "centrifugation". In our case, if we want to go above 300ml, then we'll use the centrifuge instead, because the vacuum would take too long.
		A: For large volumes we usually say "Harvest", and for smaller volumes "separate" or "resuspend"
		pipette 230µl "RecoveryMedia" to plate B, decontaminate before, between, after
		transfer plate B to different non-cooled carrier
		NOTE: the transfer was done because the z-values for the vacuum weren't setup yet
		?? Would it be permissible to mix on the vacuum carrier if we wanted to?
		A: yes, once the z values are configured
		mix 90µl plate A, decontaminate before and after, wash fast 3+4ml between
		transfer plate B back to vacuum carrier
		?? Why?
	Plating
		REQUITE: Plate C for plating cells
		wash fast 25+4ml
		wash 4+1ml
		transport plate C to shaker, remove its lid
		shaker start (with proper parameters)
		?? What parameters can be used for the shaker for cross-lab generality?
		A: need to specify the RPMs
		plate 50µl from plate B to plate C, 5 drops per well, decontaminate before, between, after


MINIMAL
-------
	Initial supplies: A, B, C
	intermediate tubes: D, E, F
	
	decontaminateTips
	pipette 1 A to D
	pipette 2 B to D
	mix D
	pcr D
	pipette 1 C to D
	pipette all D to E
	vacuum E
	pipette_while_shaking all E to F 5-drops-per-well
	seal F
	read F
	peel F
------------
	decontaminate
	pipette {
		source = A,
		target = D,
		volume = 1,
		cleanPolicy = wash
	}
	pipette {
		source = B,
		target = D,
		volume = 2,
		cleanPolicy = decontaminate
	}
	mix D
	pcr D
	pipette {
		source = C,
		target = D,
		volume = 1,
		cleanPolicy = clean
	}
	pipette {
		source = D,
		target = E,
		volume = all
	}
	vacuum E
	pipette_while_shaking all E to F 5-drops-per-well
	seal F
	read F
	peel F


==========
AST Processing levels:
1) maximally abstract commands, lab-independent
2) more concrete commands for the given system (implementations of abstract methods)
3) more concrete commands for the given robot (various choices made depending on robot setup and capabilities)
4a) generation of parameter set for the protocol, including fixed, preferred, suggested, and undetermined parameters
4b) more concrete commands given a parameter set (each value set might change the other parameters)
5) fully parameterized commands
6) EvoWare script output

For now we'll combine levels 2 and 3.

Examples of commands at different levels
	aspirate/dispense/wash/move -- evoware with all parameters fixed
	pipette/transport -- low-level roboliq without requiring fixed parameters
	pcrDispense/heatShock -- high-level roboliq with automatic input from previous stage

	pipette will be translated into wash/move/aspirate/dispense sequences

Names:
	for the whole library: roboliq or liquor
	level 1: an abstract interface defining the high-level Roboliq functions
	level 2/3: the Roboliq implementations generate abstract tokens
	level 5: these are the "concrete" tokensab
-------------
Level 1 example:
pcrDispense(volume = 3µl)
competentYeastDispension(plasmid = 2µl, competentCell = 30µl, ssDNA = 5µl, liAcMix = 90µl)
heatShock()
yeastCellFiltration()
plate()

-------------
Level 3 example for pcrDispense:
pcrDispense(source: Plate, volume: Volume): Plate = {
	// ensure source is on a cooled carrier, if possible
	// choose an empty dest plate that's compatible with the source plate
	// assert that the dest plate is empty
	// ensure that dest plate in on a cooled carrier, if possible
	pipette(template, dest, volume, cleanPolicy=...);
}

Roboliq package hierarchy:
	1:
		parts [parts, config]
	2:
		tokens (parts)
	3:
		robot [robot interface, robot state]
	4:
		commands (parts, tokens) [commands, part state, robot state]
		robot implementation (parts, tokens) [can guide command decisions, token translator]


-------------

val templatePlate = new Plate
val plasmidDna = new Well
val competentCells = new Well
val ssDNA = new Well
val liAcMix = new Well

val A = 

PcrDispense(source: Plate, volume: Volume): Plate = {
	// ensure source is on a cooled carrier, if possible
	// choose an empty dest plate that's compatible with the source plate
	// assert that the dest plate is empty
	// ensure that dest plate in on a cooled carrier, if possible
	pipette(template, dest, volume, cleanPolicy=...);
}


---------------------------------------------------

Wash parameters used in scripts:
grid	site	grid	site	washV	washDel	clnV	vlnDel	airV	airSpd	retract	fast
1       1       1       0       "0.25"  500     ".1"    500     10      70      30      0
1       1       1       0       ".2"    500     ".1"    500     5       70      10      0
1       1       1       0       "25"    500     "0.1"   500     10      70      30      1
1       1       1       0       "25"    500     "4.0"   500     10      70      30      1
1       1       1       0       "3.0"   500     "4.0"   500     10      70      30      1
1       1       1       0       "4"     500     ".1"    500     10      70      30      0
1       1       1       0       "4"     500     "1"     500     10      70      30      0
1       1       1       0       "4"     500     "3"     500     10      70      30      0
1       1       1       0       "5"     500     "1"     500     10      70      30      1
1       1       1       0       "5"     500     "4.0"   500     10      70      30      1
1       1       1       0       "5"     500     "4.0"   500     5       70      10      1
1       1       1       2       "0.1"   500     "2.0"   500     10      70      30      1
1       1       1       2       "2"     500     "5"     500     10      70      30      1
2       1       2       0       "3.0"   500     "4.0"   500     10      70      30      1
2       1       2       2       "0.1"   500     "3.0"   500     10      70      30      1
2       1       2       2       "15"    500     "3"     500     10      70      30      1
2       1       2       2       "2"     500     "5"     500     10      70      30      1
2       1       2       2       "4.0"   500     "0.1"   500     10      70      30      1

---------------------------------------------------
THESE WERE QUESTIONS/NOTES I WROTE DOWN NEAR THE BEGINNING OF THE PROJECT:

In its current form, RoboEase lets the user specify a sequence of actions.  Flow control is not implemented.

- What is the reason for the existence of RoboEase?
ellis: to let high level software produce platform-independent code for controlling our lab robots.

- What is the most important target audience for RoboEase?
ellis: labs which are working with DNA editing.

- What other audiences do we want to consider?
ellis: biology labs that are interested in employing robots.

* More complex control would require flow control; otherwise we need the Production Management System and all it's intelligence to run actual experiments.  Shall we have a language which combines higher-level control and lower level control?  We'll need some form of monitoring program, like the Production Management System, which can interact with the user and determine robot actions based on the feedback.

* RoboEase can remain simple if there's a good way to control the process flow, error handling, feedback checks, and user interaction at a higher level.

- The RoboLab User Manual says that it is difficult to construct programs, even for expert users.  What can we do to simplify this?




