Script generation errors:
	test_1x1_8x6_3: try to asperate 18ul, but error: tip 5: 6ul too much in diluter
	
Fabian:
	when washing and aspirating for decontamination, can we use the full tip volume?
	A: yes
	cleaning rules:
		concepts:
			liquid
			well
			liquid group
		cleaning occasions:
			1. when beginning to handle a new liquid group
			2. when entering different wells of the same liquid group
			3. when done handling a liquid group
		combinating all three cleaning occasions:
			_ = no cleaning
			L = light rinse
			T = thorough wash
			D = decontaminate
			=====   =
			_ * *	-
			L * *	-
			T _ T
			T L T	
			T T T	- (this is the same a not grouping)
			T D T	-
			D * T	?
			D _ D	+ 
			D L D	+
			D T D	-
			D D D
			T * D	?
		
		SKIP CLEANING IF:
			aspirating the same liquid as before and no destinations were entered since the previous aspirate
			A: even after a free dispense, if the destination contains something which can contaminate, you should probably perform a light wash

		notes:
			by default, each liquid is in its own group, so aspirating a new liquid will trigger a thorough wash
			a free/dry dispense does not flag cleaning

		before aspirate: choose greater of:
			source: clean according to previously entered sources and destinations
			dest: clean according to previously entered destinations and previously entered sources from different groups than the current source
		before subsequent dispense after having entered a prior destination well:
			clean according to previously entered destinations and previously entered sources from different groups than the current source
		user overrides:
			clean intensity at:
				start
				between
				finish

	for disposable tip robots, do you think it'd be ok to have a policy of replacing tips when any washing is specified, even the light wash?
	A: yes, sort of.  We might also store disposable tips for later use, or wash them!

	which contaminants on the tip should trigger a wash before decontaminating?
	A: living cells, or expand the decontamination wash to always first wash out the outsides in the dirty wash container

	cleaning: does it ever make sense to...
		(when using a single pipetter)
		aspirate from well A1, free dispense B1, DON'T CLEAN TIP, aspirate A2, free dispense B2?
		aspirate A1, wet dispense B1, DON'T CLEAN TIP, wet dispense B2?
		aspirate A1, wet dispense B1, DON'T CLEAN TIP, aspirate A2, DON'T CLEAN TIP, wet dispense B2?
		if we decontaminate before starting a pipetting operation on a particular plate, is it ok to always decontaminate afterwards?
		are there liquids where we wouldn't require decontamination before entering them, but afterwards?
			
	which contaminants should we keep track of?  we might want to track them for deciding how to wash
	which other substances should we keep track of for other purposes?
	A: cells, DNA, organic solvents; after DNA and cells, decontamination wash, and for organic solvents (currently only ethanol) wash more extensively;
	A: for oil, decontam with organic solvent (but this isn't the case for our protocols at the moment)
	see wash table at bottom of this file
	when mixing liquids, is there a guideline to follow for automatically choosing the properties of the resultant liquid?
		A: if water, then assume water; if cell, keep cell
		methods:
			keep properties of original liquid
			choose most conservative values (only for cleaning specs, not for liquid properties)
		liquid properties family (water-like, DMSO, oil, etc)
		cleaning specs



Large tips: 950µl max; but only 900ul if we need to use the decontamination wash
Small tips: 45µl max

Liquids:
	need to know contaminants in order to decide how to wash
	need to know liquid properties family in order to choose an Evoware LiquidClass
	need to know group id and washing specs for deciding when to wash and with what intensity
Liquid class depends:
	tips
	liquid sucked up (viscosity, conductivity, live cells?)
	volume already in target well
	plate type (1536 well plates should be approached slowly)
Suggested liquid classes:
	Large tips:
		Water free dispense (use for water, buffers, ethenol)
		Water wet contact
		Water dry contact High density plate (goes down really slow for 1536 (32x48) plates in order to avoid hurting the tips if they hit sometime) (use this for any dry contact dispense, not just high density plates)
		DMSO free dispense
		Comp cells free dispense
		System Liquid free dispense (System Liquid is in principle "water", but we can use the system's liquid)
		D-BSSE Decon (in principle, water wet contact with mixing: just for the the decontamination script)
	Small tips:
		D-BSSE Te-PS Dry Contact
		D-BSSE Te-PS Wet Contact
		D-BSSE Decon
		
	When accuracy doesn't matter, can use free dispense
	Contact for low dispense volumes
	Dry contact: only with empty plate
	cells: always Comp cells free dispense
	
NOTE: critical thing in a transformation is speed, though the speed of aspirate and dispense has to be slow in order not to kill the cells

CompleteYeastTransformation
	PCR Dispense
		REQUIRE: "template" cooled (full 96 plate) [change to "DNA template"]
		REQUIRE: plate A cooled
		wash 25 + 4ml fast
		wash 4 + 1ml
		?? Why the two different washes?  How can this be specified in a manner independent of robot setup?
		pipette 3µl "ligation mix" to plate A, decontaminate before each aspirate and after completion
	Competent Yeast Dispension
		REQUIRE: "plasmid DNA" cooled (single 20 well)
		REQUIRE: "competent cells" cooled (single 8 well)
		REQUIRE: "ssDNA" cooled (single 20 well)
		REQUIRE: "LiAcMix" cooled (single 8 well)
		?? How was the choice made about which plate/well to put the supplies on?
		wash 25 + 4ml fast
		wash 4 + 1ml
		?? Is a wash necessary after a prior decontamination?  before a pending decontamination?
		A: done when the outside of the tips is expected to be very dirty, and we don't want to contaminate the decontamination wash
		pipette 2µl "plasmid DNA" to plate A, decontaminate before first aspirate and after completion
		pipette 30µl "competent cells" to plate A, decontaminate before each aspirate and after completion
		pipette 5µl "ssDNA" to plate A, wash 4+3ml before start and after completion
		?? Why 4+3ml wash?  How can this be specified in a manner independent of robot setup?
		pipette 90µl "LiAcMix" to plate A, wash 4+3ml before each aspirate and after completion
*		?? Why doesn't LiAcMix require a prior decontamination after aspirating ssDNA?
*		?? Would it be sufficient to wash just at the beginning and end instead of before each aspirate?
		mix 90µl plate A, decontaminate before each mix
	Heat Shock
		repeat 4 times:
			?? might a plate NOT be on a cooled carried upon entry to this subroutine?
			A: need to be flexible; bacteria should be incubated at 4deg, yeast at 30deg
			wait (IncubationTime / 4 - 60)
			shake plate A (…parameters…)
			move plate A to cooled carrier
		?? What's happening during incubation?
		?? How critical is the incubation time?
		A: for bacteria, highly; for yeast, not.
		?? Is the difference in time of mix completion among the wells significant?
		?? At this point, the PCR lid is opened and the tips are sterilized.  Why?  Is this part of the timing?
		PCR open lid
		wash 25+4ml fast
		wash 4+1ml
		decontaminate
		?? Why wash AND decontaminate?  If we wash after decontamination, are the tips contaminated again?
		pcr plate A for HeatShockTime then return to cooled carrier
		?? How does TRobot1 know when to start cycling?  Why does the lid stay open during the process?  Or does it?
		A: It should be turned on to 42deg at the start -- currently done manually
		//transfer plate A to cooled carrier
		PCR close lid
	Yeast Cell Filtration
		REQUIRE: Plate B is a filter plate
		REQUIRE: "RecoveryMedia" cooled (single 8 well)
		pipette 140µl from plate A to plate B, wash fast 3+4ml before each aspirate and after completion
		?? Why 3+4ml wash?
		vacuum_separate plate B
			ApplyVacuumRear(300)
			wait 900s
			VentRear()
			?? What does VentRear() mean?
		?? Does everyone have a vacuum? Or is the separation performed in various ways?
		A: "centrifugation". In our case, if we want to go above 300ml, then we'll use the centrifuge instead, because the vacuum would take too long.
		A: For large volumes we usually say "Harvest", and for smaller volumes "separate" or "resuspend"
		pipette 230µl "RecoveryMedia" to plate B, decontaminate before, between, after
		transfer plate B to different non-cooled carrier
		NOTE: the transfer was done because the z-values for the vacuum weren't setup yet
		?? Would it be permissible to mix on the vacuum carrier if we wanted to?
		A: yes, once the z values are configured
		mix 90µl plate A, decontaminate before and after, wash fast 3+4ml between
		transfer plate B back to vacuum carrier
		?? Why?
	Plating
		REQUIRE: Plate C for plating cells
		wash fast 25+4ml
		wash 4+1ml
		transport plate C to shaker, remove its lid
		shaker start (with proper parameters)
		?? What parameters can be used for the shaker for cross-lab generality?
		A: need to specify the RPMs
		plate 50µl from plate B to plate C, 5 drops per well, decontaminate before, between, after



==========
Terminology:
	Obj
	ObjSetup
	ObjConfig
	ObjState
	-
	LiquidFamily: a string used on L4 to identify a class of liquids having similar properties as far as pipetting is concerned
	LiquidGroup: a group of wells which are similar enough that the tips only need to be lightly washed when performing pipetting operations among them
	PipettePolicy(id for translator, position for dispense): evoware liquid class ID (L1) and info about where disperse takes place (air, top, wet, dry) (L3)
	-
	id: unique id used on the translator level
	name: unique id used above the translator level
	label: user-displayed label, need not be uniqu
	description: user-displayed description
	key: temporary grouping/sorting key
	-
	things which can be specified in protocol customization, but which refer to lab details:
	TipModel
	PipettePolicy
	-
	protocol objects, like Plate and Liquid
	Spec
	Info
	Data
	Type
	Kind
	Category
	Brand
	Product
	Model: used for part types of which there can be many different copies (e.g. plates, tips, and tubes of a kind)
	Family
	Configuration
	-
	simple identifiers: enums, sealed case classes, unsealed case classes (for identifiers which should be extensible by user), strings
	how to distinguish between simple identifiers, keys, data objects, and processing objects?
	enumeration
	scale, where enumeration is somehow increasing
	-
	reagent
	liquid
	fluid
	substance
	solution
	mixture
	
	things we need terms for:
		liquid pipetting category (based on liquid properties, many liquids can be grouped together as far as pipetting is concerned)
		type of plate (96 well, 96 well deep square, 12 well, etc, with certain volumes and shapes)
		type of tip
		type of tube (various epindorphs)
==========
Handling plates between different devices:
	Challenges:
		- a plate may need to be moved to a device
		- a plate may need to be moved back onto the table from a device
		- where should the plate be moved back to?  The simplest answer would be to move it back to its original position, but what if another plate now occupies that position?
		- the plate might not be compatible with the device
	Solution A:
		- each L3/L4 plate command has an option to:
			replate (new PlateModel, volume, location), which would then discard the original plate
			cover/uncover at origial location
			move plate to a new location
			cover/uncover at new location
			<normal operation occurs at this point>
			re-cover/uncover/uncover-and-dispose-lid at the end
			move plate to new final location (prehaps returning it to the original location)
			conve/uncover at final location
==========
AST Processing levels:
1) maximally abstract commands, lab-independent
2) more concrete commands for the given system (implementations of abstract methods)
3) more concrete commands for the given robot (various choices made depending on robot setup and capabilities)
4a) generation of parameter set for the protocol, including fixed, preferred, suggested, and undetermined parameters
4b) more concrete commands given a parameter set (each value set might change the other parameters)
5) fully parameterized commands
6) EvoWare script output

For now we'll combine levels 2 and 3.

Examples of commands at different levels
	aspirate/dispense/wash/move -- evoware with all parameters fixed
	pipette/transport -- low-level roboliq without requiring fixed parameters
	pcrDispense/heatShock -- high-level roboliq with automatic input from previous stage

	pipette will be translated into wash/move/aspirate/dispense sequences

Names:
	for the whole library: roboliq or liquor
	level 1: an abstract interface defining the high-level Roboliq functions
	level 2/3: the Roboliq implementations generate abstract tokens
	level 5: these are the "concrete" tokensab
-------------
Level 1 example:
pcrDispense(volume = 3µl)
competentYeastDispension(plasmid = 2µl, competentCell = 30µl, ssDNA = 5µl, liAcMix = 90µl)
heatShock()
yeastCellFiltration()
plate()

-------------
Level 3 example for pcrDispense:
pcrDispense(source: Plate, volume: Volume): Plate = {
	// ensure source is on a cooled carrier, if possible
	// choose an empty dest plate that's compatible with the source plate
	// assert that the dest plate is empty
	// ensure that dest plate in on a cooled carrier, if possible
	pipette(template, dest, volume, cleanPolicy=...);
}

Roboliq package hierarchy:
	1:
		parts [parts, config]
	2:
		tokens (parts)
	3:
		robot [robot interface, robot state]
	4:
		commands (parts, tokens) [commands, part state, robot state]
		robot implementation (parts, tokens) [can guide command decisions, token translator]


-------------
Example of processing levels:

level 4: pipette 30ul water to each well of plate A
knowledgebase:
	round 1:
		Q: what is the dimension of the plate?
	round 2:
		known: liquid required = dest well count * 30ul
		which well(s) is the water in?
		where are the water wells?
		where is plate A?
		how much water is initially in the water wells?
		is there liquid already in plate A?  How much?
how do we discover which questions need to be answered?
how do we represent those questions?
each command will "register" its objects in the "knowledge database" along with what it knows, needs to know, or defaults to; we should somehow be able to trace back to the location in the source code where the registration took place 

KnowledgeBase:
	each device can maintain a knowledge base
	two layers:
		fixed values
		variable values -- these might have a default; if not, then the user is required to provide a value
	most KB items are related to initial setup
	other items deal with changing values (e.g. plate location)

	items:
		objects
		locations
		initial liquids and volumes
		plate dimensions
		selection of device when multiple devices are available
		selection of parameters (bool, int, double, string)
	
	challenges:
		some of the variables cannot be assigned default values until after everything else has finished processing (such as required liquid levels)
		so we need to run some iterative processing over the KnowledgeBase in order to set as many defaults as possible
		how to keep track of non-initial values, such as changing plate locations?

in order to create T2 tokens, we need to know:
	- part locations
	- fluid wells
	- plate dimensions
	- the initial fluid levels in wells
	- the destination locations for plate transfers
	- other selections

processing order:
	- find amount of fluid required for each liquid (if not initially given) (if supply is not infinite)
	- based on whether the liquid should be cooled and on required volume, choose wells
	- user must specify plate dimension? However, the default should be specified in the Robot definition
	- for plate transfers with multiple possible destinations, we need to give the knowledge base item some form of label so that the user can identify which command the transfer is for


-------------
val templatePlate = new Plate
val plasmidDna = new Well
val competentCells = new Well
val ssDNA = new Well
val liAcMix = new Well

val A = 

PcrDispense(source: Plate, volume: Volume): Plate = {
	// ensure source is on a cooled carrier, if possible
	// choose an empty dest plate that's compatible with the source plate
	// assert that the dest plate is empty
	// ensure that dest plate in on a cooled carrier, if possible
	pipette(template, dest, volume, cleanPolicy=...);
}


---------------------------------------------------

Wash parameters used in scripts:
grid	site	grid	site	washV	washDel	clnV	clnDel	airV	airSpd	retract	fast
1       1       1       0       "0.25"  500     ".1"    500     10      70      30      0
1       1       1       0       ".2"    500     ".1"    500     5       70      10      0
1       1       1       0       "25"    500     "0.1"   500     10      70      30      1
1       1       1       0       "25"    500     "4.0"   500     10      70      30      1
1       1       1       0       "3.0"   500     "4.0"   500     10      70      30      1
1       1       1       0       "4"     500     ".1"    500     10      70      30      0
1       1       1       0       "4"     500     "1"     500     10      70      30      0
1       1       1       0       "4"     500     "3"     500     10      70      30      0
1       1       1       0       "5"     500     "1"     500     10      70      30      1
1       1       1       0       "5"     500     "4.0"   500     10      70      30      1
1       1       1       0       "5"     500     "4.0"   500     5       70      10      1
1       1       1       2       "0.1"   500     "2.0"   500     10      70      30      1
1       1       1       2       "2"     500     "5"     500     10      70      30      1
2       1       2       0       "3.0"   500     "4.0"   500     10      70      30      1
2       1       2       2       "0.1"   500     "3.0"   500     10      70      30      1
2       1       2       2       "15"    500     "3"     500     10      70      30      1
2       1       2       2       "2"     500     "5"     500     10      70      30      1
2       1       2       2       "4.0"   500     "0.1"   500     10      70      30      1

A:
	airV: 10
	retract: 30

---------------------------------------------------
THESE WERE QUESTIONS/NOTES I WROTE DOWN NEAR THE BEGINNING OF THE PROJECT:

In its current form, RoboEase lets the user specify a sequence of actions.  Flow control is not implemented.

- What is the reason for the existence of RoboEase?
ellis: to let high level software produce platform-independent code for controlling our lab robots.

- What is the most important target audience for RoboEase?
ellis: labs which are working with DNA editing.

- What other audiences do we want to consider?
ellis: biology labs that are interested in employing robots.

* More complex control would require flow control; otherwise we need the Production Management System and all it's intelligence to run actual experiments.  Shall we have a language which combines higher-level control and lower level control?  We'll need some form of monitoring program, like the Production Management System, which can interact with the user and determine robot actions based on the feedback.

* RoboEase can remain simple if there's a good way to control the process flow, error handling, feedback checks, and user interaction at a higher level.

- The RoboLab User Manual says that it is difficult to construct programs, even for expert users.  What can we do to simplify this?



Possible Evolab errors:
Rotem_Script01.esc:
	MIX_WELLS P6 G7+9 WET_MIX_TIMES WET_MIX_VOL PIE_MIX_AUT
	gets translated as:
	Mix(255,"PIE_MIX_AUT","150","150","150","150","150","150","150","150",0,0,0,0,29,2,1,"0C080000000�o00000",15,0);
	Mix(1,"PIE_MIX_AUT","150",0,0,0,0,0,0,0,0,0,0,0,29,2,1,"0C0800000000p00000",15,0);
	which is weird because that looks like it might be P6:H1+8,G8 instead... (I haven't looked into this more closely)
Rotem_Script03.esc:
	DIST_REAGENT2 PHOS_MIX P13:A1+69 PHOS_MIX_LIST PIE_AUTBOT TIPTYPE:200,TIPMODE:KEEPTIP
	replaces tips every second dispense, despite KEEPTIP
